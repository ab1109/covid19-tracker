{"ast":null,"code":"var _jsxFileName = \"E:\\\\covidtracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //hooks\n\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['']\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"k/DxwZSu/1zHTtHlTKnhZOTCIIE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["E:/covidtracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC,C,CAAiD;;AACjD,SAASC,cAAT,QAA+B,WAA/B;AACA,SAAQC,IAAR,EAAeC,GAAf,QAAyB,iBAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AACA,MAAMC,KAAK,GAAE,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KAAoB;AAAA;;AAC7B,QAAK,CAACC,SAAD,EAAYC,YAAZ,IAA2BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACd,UAAMU,QAAQ,GAAE,YAAS;AACtBD,MAAAA,YAAY,CAAC,MAAMR,cAAc,EAArB,CAAZ;AACF,KAFD;;AAIAS,IAAAA,QAAQ;AACR,GANQ,CAAT;AAOA,QAAMC,SAAS,GACfH,SAAS,CAACI,MAAV,gBAEA,QAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACL,SAAS,CAACM,GAAV,CAAc,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAUA,IAAxB,CADL;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACG,UAAAA;AAAD,SAAD,KAAeA,SAA7B,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAC,SAHL;AAIPC,QAAAA,IAAI,EAAC;AAJE,OAAD,EAMP;AACCd,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAACO,UAAAA;AAAD,SAAD,KAAYA,MAA1B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAC,KAHb;AAICG,QAAAA,eAAe,EAAE,mBAJlB;AAKCF,QAAAA,IAAI,EAAC;AALN,OANO;AAFR;AADR;AAAA;AAAA;AAAA;AAAA,UAFA,GAoBO,IArBP;AAwBA,QAAMG,QAAQ,GACVjB,IAAI,CAACW,SAAL,gBAEI,QAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJJ,MAAAA,MAAM,EAAC,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADH;AAEJG,MAAAA,QAAQ,EAAE,CAAC;AACPE,QAAAA,KAAK,EAAE,QADA;AAEPI,QAAAA,eAAe,EAAE,CAAC,EAAD;AAFV,OAAD;AAFN,KADR;AASE,IAAA,OAAO,EAAE;AACLE,MAAAA,MAAM,EAAE;AAACC,QAAAA,OAAO,EAAC;AAAT,OADH;AAELC,MAAAA,KAAK,EAAE;AAACD,QAAAA,OAAO,EAAC,IAAT;AAAeE,QAAAA,IAAI,EAAE,oBAAmBpB,OAAQ;AAAhD;AAFF;AATX;AAAA;AAAA;AAAA;AAAA,UAFJ,GAgBG,IAjBP;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACwB,SAAvB;AAAA,cACKjB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1DD;;GAAMN,K;;KAAAA,K;AA4DN,eAAeA,KAAf","sourcesContent":["import React, {useState,useEffect} from 'react'; //hooks\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line,  Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nconst Chart= ({data,country}) => {\r\n    const[dailyData, setDailyData]= useState([]);\r\n\r\n    useEffect(()=> {\r\n     const fetchAPI= async()=>{\r\n        setDailyData(await fetchDailyData());\r\n     }\r\n    \r\n     fetchAPI();\r\n    });\r\n    const lineChart =(\r\n    dailyData.length \r\n    ?(\r\n    <Line\r\n      data={{\r\n          labels:dailyData.map(({date})=>date),\r\n          datasets: [{\r\n              data: dailyData.map(({confirmed})=>confirmed),\r\n              label: 'Infected',\r\n              borderColor:'#3333ff',\r\n              fill:true,\r\n              \r\n          }, {\r\n              data: dailyData.map(({deaths})=>deaths),\r\n              label: 'Deaths',\r\n              borderColor:'red',\r\n              backgroundColor: 'rgba(255,0,0,0.5)',\r\n              fill:true,\r\n              \r\n          } ],\r\n      }}\r\n      />): null\r\n    );\r\n\r\n    const barChart=(\r\n        data.confirmed\r\n        ?(\r\n            <Bar\r\n              data={{\r\n                labels:['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['']\r\n\r\n                }]\r\n              }}\r\n              options={{\r\n                  legend: {display:false},\r\n                  title: {display:true, text:`Current state in ${country}`},\r\n              }}\r\n            />\r\n        ) :null\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}