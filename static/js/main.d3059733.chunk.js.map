{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/covid.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3059733.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Hg_4\",\"card\":\"Cards_card__2DRkb\",\"infected\":\"Cards_infected__2ElfL\",\"recovered\":\"Cards_recovered__3mcSE\",\"deaths\":\"Cards_deaths__1pjxr\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'\r\n\r\nconst Cards= ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n   if(!confirmed){\r\n     return 'Loading...'\r\n   }\r\n    return(\r\n        <div className={styles.container}>\r\n         <Grid container spacing={3} justify=\"center\">\r\n           <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n             <CardContent>\r\n               <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n               <Typography variant =\"h5\">\r\n                 <CountUp\r\n                 start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n               </Typography>\r\n               <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n               <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n             </CardContent>\r\n           </Grid>\r\n           <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>             <CardContent>\r\n               <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n               <Typography variant =\"h5\">\r\n                 <CountUp\r\n                 start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n               </Typography>\r\n               <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n               <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n             </CardContent>\r\n           </Grid>\r\n           <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>             <CardContent>\r\n               <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n               <Typography variant =\"h5\">\r\n                 <CountUp\r\n                 start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n               </Typography>\r\n               <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n               <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n             </CardContent>\r\n           </Grid>\r\n         </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n \r\nexport const fetchData = async(country)=> {\r\n    let changeableUrl=url;\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`;\r\n    }\r\n\r\ntry {\r\n    const {data: {confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableUrl);\r\n     \r\n    return {confirmed, recovered, deaths, lastUpdate};\r\n    \r\n    } catch (error) {\r\n    console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData= async()=> {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData= data.map((dailyData)=>({\r\n           confirmed:dailyData.confirmed.total,\r\n           deaths:dailyData.deaths.total,\r\n           date:dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    }catch(error){\r\n\r\n    }\r\n}\r\nexport const fetchCountries= async()=>{\r\n    try{\r\n     const {data: {countries}}= await axios.get(`${url}/countries`);\r\n  return countries.map((country)=>country.name);\r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}","import React, {useState,useEffect} from 'react'; //hooks\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line,  Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nconst Chart= ({data:{confirmed,deaths,recovered},country}) => {\r\n    const[dailyData, setDailyData]= useState([]);\r\n\r\n    useEffect(()=> {\r\n     const fetchAPI= async()=>{\r\n        setDailyData(await fetchDailyData());\r\n     }\r\n    \r\n     fetchAPI();\r\n    },[]);\r\n    const lineChart =(\r\n    dailyData.length \r\n    ?(\r\n    <Line\r\n      data={{\r\n          labels:dailyData.map(({date})=>date),\r\n          datasets: [{\r\n              data: dailyData.map(({confirmed})=>confirmed),\r\n              label: 'Infected',\r\n              borderColor:'#3333ff',\r\n              fill:true,\r\n              \r\n          }, {\r\n              data: dailyData.map(({deaths})=>deaths),\r\n              label: 'Deaths',\r\n              borderColor:'red',\r\n              backgroundColor: 'rgba(255,0,0,0.5)',\r\n              fill:true,\r\n              \r\n          } ],\r\n      }}\r\n      />): null\r\n    );\r\n\r\n    const barChart=(\r\n       confirmed\r\n        ?(\r\n            <Bar\r\n              data={{\r\n                labels:['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                    'rgba(0,0,255,0.5)',\r\n                    'rgba(0,255,0,0.5)',\r\n                    'rgba(255,0,0,0.5)',\r\n                    ],\r\n                    data:[confirmed.value,recovered.value,deaths.value]\r\n\r\n                }]\r\n              }}\r\n              options={{\r\n                  legend: {display:false},\r\n                  title: {display:true, text:`Current state in ${country}`},\r\n              }}\r\n            />\r\n        ) :null\r\n    );\r\n    return(\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React , {useState,useEffect} from 'react';\r\nimport { NativeSelect,FormControl, StylesProvider } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries } from '../../api';\r\n\r\nconst CountryPicker= ({handleCountryChange}) => {\r\n  const [fetchedCountries,setFetchedCountries]=useState([]);\r\n    useEffect(() =>{\r\n        const fetchAPI= async()=>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n            <option value =\"\">Global</option> \r\n            {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/covid.9e5d4fc7.png\";","import React from 'react';\r\n\r\n//import Cards from './components/Cards/Cards'; We dont have to use this as it clutters up app.js\r\n//import Chart from './components/Chart/Chart';\r\n//import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './api';\r\n\r\nimport coronaImage from './images/covid.png';\r\n\r\nclass App extends React.Component{\r\n    state = {\r\n       data: {}, \r\n       country: '',\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n     \r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange= async(country)=>{\r\n        \r\n        //set the state\r\n        const fetchedData=await fetchData(country);\r\n        this.setState({data: fetchedData,country: country});\r\n    }\r\n    render(){\r\n        const {data, country}= this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n            <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3r88O\",\"image\":\"App_image__LmnwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3OgpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3ZxuX\"};"],"sourceRoot":""}